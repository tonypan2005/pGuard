#include <pebble.h>

static Window *window;
static TextLayer *layer;
static TextLayer *layer1;
static TextLayer *layer2;
static TextLayer *layer3;
static TextLayer *layer4;

int level = 1; 

enum {
  KEY_BUTTON_EVENT = 0,
  BUTTON_EVENT_UP = 1,
  BUTTON_EVENT_SELECT = 2,
  BUTTON_EVENT_DOWN = 3,
  KEY_VIBRATION = 4
};

//only vibrates at the moment
static void in_received_handler(DictionaryIterator *iter, void *context)
{
  Tuple *t = dict_read_first(iter);
  if(t)
  {
    vibes_short_pulse();  
  }
}

//used google for reference
void send_int(uint8_t key, uint8_t cmd)
{
  DictionaryIterator *iter;
  app_message_outbox_begin(&iter);
  Tuplet value = TupletInteger(key, cmd);
  dict_write_tuplet(iter, &value);
  app_message_outbox_send();
}

void up_click_handler(ClickRecognizerRef recognizer, void *context)
{
  if(level <= 2)
    level += 1;
  if(level == 1)
    {      
      text_layer_set_text(layer, "^");
      text_layer_set_text(layer1, "UNEASY");
      text_layer_set_text(layer2, "SAFE");
    }
    
  if(level == 2)
    {
      text_layer_set_text(layer, "^");
      text_layer_set_text(layer1, "DANGER");
      text_layer_set_text(layer2, "UNEASY");
      text_layer_set_text(layer3, "SAFE");
      text_layer_set_text(layer4, "v");
      
    }
  if(level == 3)
    {
      text_layer_set_text(layer, " ");
      text_layer_set_text(layer1, "HOLD UP FOR 911");
      text_layer_set_text(layer2, "DANGER");
      text_layer_set_text(layer3, "SAFE");
      text_layer_set_text(layer4, "v");
    }
    send_int(KEY_BUTTON_EVENT, BUTTON_EVENT_UP);
}

static void up_long_click_handler(ClickRecognizerRef recognizer, void *context)
{
  text_layer_set_text(layer2, "911");
  text_layer_set_text(layer, "");
  text_layer_set_text(layer1, "");
  text_layer_set_text(layer3, "SAFE");
  text_layer_set_text(layer4, "v");
  level = 4;
  send_int(KEY_BUTTON_EVENT, BUTTON_EVENT_UP);
}

static void up_long_click_release_handler(ClickRecognizerRef recognizer, void *context)
{
  text_layer_set_text(layer2, "911");
  text_layer_set_text(layer, "");
  text_layer_set_text(layer1, "");
  text_layer_set_text(layer3, "SAFE");
  text_layer_set_text(layer4, "v");
  level = 4;
  send_int(KEY_BUTTON_EVENT, BUTTON_EVENT_UP);
} 

static void down_click_handler(ClickRecognizerRef recognizer, void *context)
{
  if(level >= 2)
    level -= 1;
  if(level == 1)
    {      
      text_layer_set_text(layer, "^");
      text_layer_set_text(layer1, "UNEASY");
      text_layer_set_text(layer2, "SAFE");
      text_layer_set_text(layer3, " ");
      text_layer_set_text(layer4, " ");
    }
    
  if(level == 2)
    {
      text_layer_set_text(layer, "^");
      text_layer_set_text(layer1, "UNEASY");
      text_layer_set_text(layer2, "SAFE");
      text_layer_set_text(layer3, " ");
      text_layer_set_text(layer4, " ");
      level = 1;
      
    }
  if(level == 3)
    {
      text_layer_set_text(layer, "^");
      text_layer_set_text(layer1, "UNEASY");
      text_layer_set_text(layer2, "SAFE");
      text_layer_set_text(layer3, " ");
      text_layer_set_text(layer4, " ");
      level = 1;
    }
  send_int(KEY_BUTTON_EVENT, BUTTON_EVENT_DOWN);
}

static void click_config_provider(void *context)
{
  window_single_click_subscribe(BUTTON_ID_UP, up_click_handler);
  window_long_click_subscribe(BUTTON_ID_UP, 2000, up_long_click_handler, up_long_click_release_handler);
  window_single_click_subscribe(BUTTON_ID_DOWN, down_click_handler);
}

//used google for reference
static void window_load(Window *window)
{
  Layer *window_layer = window_get_root_layer(window); 
  GRect window_bounds = layer_get_bounds(window_layer);
  
  layer = text_layer_create(GRect(0, 8, window_bounds.size.w - 5, window_bounds.size.h));
  text_layer_set_font(layer, fonts_get_system_font(FONT_KEY_GOTHIC_24_BOLD));
  text_layer_set_text(layer, "^");
  text_layer_set_text_alignment(layer, GTextAlignmentCenter);
  text_layer_set_overflow_mode(layer, GTextOverflowModeWordWrap);
  layer_add_child(window_layer, text_layer_get_layer(layer));
  
  layer1 = text_layer_create(GRect(0, 20, window_bounds.size.w - 5, window_bounds.size.h));
  text_layer_set_font(layer1, fonts_get_system_font(FONT_KEY_GOTHIC_14_BOLD));
  text_layer_set_text(layer1, "ALERT");
  text_layer_set_text_alignment(layer1, GTextAlignmentCenter);
  text_layer_set_overflow_mode(layer1, GTextOverflowModeWordWrap);
  layer_add_child(window_layer, text_layer_get_layer(layer1));
  
  layer2 = text_layer_create(GRect(0, 55, window_bounds.size.w - 5, window_bounds.size.h));
  text_layer_set_font(layer2, fonts_get_system_font(FONT_KEY_DROID_SERIF_28_BOLD));
  text_layer_set_text(layer2, "SAFE");
  text_layer_set_text_alignment(layer2, GTextAlignmentCenter);
  text_layer_set_overflow_mode(layer2, GTextOverflowModeWordWrap);
  layer_add_child(window_layer, text_layer_get_layer(layer2));
  
  layer3 = text_layer_create(GRect(0, 110, window_bounds.size.w - 5, window_bounds.size.h));
  text_layer_set_font(layer3, fonts_get_system_font(FONT_KEY_GOTHIC_14_BOLD));
  text_layer_set_text(layer3, "");
  text_layer_set_text_alignment(layer3, GTextAlignmentCenter);
  text_layer_set_overflow_mode(layer3, GTextOverflowModeWordWrap);
  layer_add_child(window_layer, text_layer_get_layer(layer3));
  
  layer4 = text_layer_create(GRect(0, 125, window_bounds.size.w - 5, window_bounds.size.h));
  text_layer_set_font(layer4, fonts_get_system_font(FONT_KEY_GOTHIC_18_BOLD));
  text_layer_set_text(layer4, "");
  text_layer_set_text_alignment(layer4, GTextAlignmentCenter);
  text_layer_set_overflow_mode(layer4, GTextOverflowModeWordWrap);
  layer_add_child(window_layer, text_layer_get_layer(layer4));
}

void window_unload(Window *window)
{
   text_layer_destroy(layer); 
   text_layer_destroy(layer1);
   text_layer_destroy(layer2);
   text_layer_destroy(layer3);
   text_layer_destroy(layer4);
}  

static void init()
{
  window = window_create();
  window_set_window_handlers(window, (WindowHandlers)
  {
    .load = window_load,
    .unload = window_unload
  });
  app_message_register_inbox_received(in_received_handler);
  app_message_open(512, 512);
  window_set_click_config_provider(window, click_config_provider);
  window_stack_push(window, true);
}

static void deinit()
{
  window_destroy(window);
}

int main(void)
{
  init();
  app_event_loop();
  deinit();
}